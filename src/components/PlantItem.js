// Importe le composant CareScale depuis un fichier local './CareScale.js'
import CareScale from './CareScale';

// Importe les styles CSS sp√©cifiques au composant PlantItem depuis un fichier externe
import '../styles/PlantItem.css';

// D√©finit une fonction handleClick qui affiche une alerte lorsqu'un √©l√©ment de la liste est cliqu√©
//Ici plantName est le param√®tre qui repr√©sente le nom de la plante,et il est utilis√© √† l'int√©rieur de la fonction pour g√©n√©rer un message d'alerte 
function handleClick(plantName) {
	alert(`Vous voulez acheter 1 ${plantName}? Tr√®s bon choix üå±‚ú®`);
}

// D√©finit un composant React nomm√© PlantItem qui re√ßoit les propri√©t√©s cover, name, water, light, et price
function PlantItem({ cover, name, water, light, price }) {
	// Rendu du composant PlantItem
	return (
		// √âl√©ment de liste avec une classe 'lmj-plant-item' et un gestionnaire d'√©v√©nement onClick
		<li className='lmj-plant-item' onClick={() => handleClick(name)}>
			{/* Affiche le prix de la plante */}
			<span className='lmj-plant-item-price'>{price}‚Ç¨</span>

			{/* Affiche l'image de la plante avec une classe 'lmj-plant-item-cover' */}
			<img className='lmj-plant-item-cover' src={cover} alt={`${name} cover`} />

			{/* Affiche le nom de la plante */}
			{name}

			{/* Affiche les √©chelles de soin pour l'arrosage et la lumi√®re en utilisant le composant CareScale */}
			<div>
				<CareScale careType='water' scaleValue={water} />
				<CareScale careType='light' scaleValue={light} />
			</div>
		</li>
	);
}

// Exporte le composant PlantItem pour pouvoir l'utiliser ailleurs dans l'application
export default PlantItem;


/*Ce code d√©finit un composant React appel√© "PlantItem" qui repr√©sente un √©l√©ment de la liste des plantes dans une application. Voici un r√©sum√© de ce que fait ce code :

Importe le composant "CareScale" depuis un fichier local appel√© "./CareScale.js". "CareScale" est utilis√© pour afficher des √©chelles de soin pour l'arrosage et la lumi√®re.

Importe les styles CSS sp√©cifiques au composant "PlantItem" depuis un fichier externe.

D√©finit une fonction nomm√©e "handleClick" qui affiche une alerte lorsque l'utilisateur clique sur un √©l√©ment de la liste des plantes. L'alerte indique que l'utilisateur souhaite acheter une unit√© de la plante s√©lectionn√©e.

D√©finit le composant "PlantItem" qui re√ßoit plusieurs propri√©t√©s en tant que param√®tres : "cover" (image de la plante), "name" (nom de la plante), "water" (niveau de soin de l'arrosage), "light" (niveau de soin de la lumi√®re) et "price" (prix de la plante).

√Ä l'int√©rieur du composant "PlantItem", le rendu se compose des √©l√©ments suivants :

Un √©l√©ment de liste <li> avec la classe CSS "lmj-plant-item" et un gestionnaire d'√©v√©nement onClick qui appelle la fonction "handleClick" avec le nom de la plante.
Un √©l√©ment <span> qui affiche le prix de la plante avec la classe CSS "lmj-plant-item-price".
Une image <img> qui affiche la couverture de la plante avec la classe CSS "lmj-plant-item-cover". L'attribut "alt" est utilis√© pour d√©crire l'image.
Le nom de la plante est affich√©.
Un conteneur <div> qui affiche deux composants "CareScale" pour l'arrosage et la lumi√®re, en passant les propri√©t√©s n√©cessaires pour d√©terminer les √©chelles de soin.
Le composant "PlantItem" est export√© pour qu'il puisse √™tre utilis√© ailleurs dans l'application, notamment pour afficher des √©l√©ments de la liste des plantes avec leurs d√©tails. */

/* Ce commentaire d√©taille chaque ligne du code, expliquant le r√¥le de chaque √©l√©ment, la logique globale du composant PlantItem, l'utilisation de la fonction handleClick pour g√©rer les clics sur les √©l√©ments de la liste, et l'utilisation du composant CareScale pour afficher les √©chelles de soin pour l'arrosage et la lumi√®re. Le composant permet d'afficher les informations d'une plante, y compris son nom, son prix, une image, et les √©chelles de soin.*/

//rend une repr√©sentation visuelle d'une plante dans une liste
//Ce composant prend plusieurs props en entr√©e: id, cover, name, water, light. Qui contiennent les informations n√©cesaires pour afficher une plante sp√©cifique.
//La prop id est utilis√©e comme cl√© pour l'√©l√©ment li.ce qui est important pour la performance et la mise √† jour des composants React
//La prop cover pour afficher une image repr√©sentant la plante.L'attribit src de l'image est d√©fini sur la valeur de la prop cover et l'attribut alt est configur√© pour une meilleure accessibilit√© en utilisant le nom de plante extrait de la prop name
//Le nom d ela plante 'name' est affich√© directement apr√®s l'image.
//En-dessous du nom de la plante, j'utilise deux composants CareScale pour afficher l'√©chelle de soin de la plante pour l'eau (water) et la lumi√®re (light) √† ces composants via les props 'scaleValue'. Le type de soin ('careType') est √©galement sp√©cifi√© pour chaque composant 'CareScale')
//En fin de compte, tout cela est encapsul√© dans un √©l√©ment <li> avec la classe CSS 'lmj-plant-item'.

//Ce composant 'PlantItem' est con√ßu pour √™tre utilis√© dans une liste de plantes, et chaque entr√©e de la liste sera rendue avec cet agencement, affichant les informations de la plante (nom, image, √©chelle de soin) en fonction des props pass√©es.